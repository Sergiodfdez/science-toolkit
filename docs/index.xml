<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Science Toolkit ‚Äì Documentation</title>
    <link>https://konstellation-io.github.io/science-toolkit/docs/</link>
    <description>Recent content in Documentation on Science Toolkit</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://konstellation-io.github.io/science-toolkit/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Installation on Minikube</title>
      <link>https://konstellation-io.github.io/science-toolkit/docs/installation/minikube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://konstellation-io.github.io/science-toolkit/docs/installation/minikube/</guid>
      <description>
        
        
        &lt;h1 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A Minikube installation. If you need help installing it follow &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/&#34;&gt;this guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Helm installation. You can install it following &lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;this guide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A bash console able execute &lt;code&gt;.sh&lt;/code&gt; scripts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gettext&lt;/code&gt; package installed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A clone of this repo&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;checking-requisites&#34;&gt;Checking requisites&lt;/h1&gt;
&lt;p&gt;If you have all the pre-requisites you should be able to execute all these commands without errors:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; minikube version
$&amp;gt; helm version
$&amp;gt; kubectl version
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;installation-steps&#34;&gt;Installation steps&lt;/h1&gt;
&lt;h3 id=&#34;clone-the-repo&#34;&gt;Clone the repo&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$&amp;gt; git clone git@github.com:intelygenz/science-toolkit.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-the-local-environment&#34;&gt;Create the local environment&lt;/h3&gt;
&lt;p&gt;To start the installation you can use the script &lt;code&gt;&amp;lt;repo_root&amp;gt;/local_env.sh&lt;/code&gt;. This script will take care of the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start a Minikube profile named &lt;code&gt;toolkit&lt;/code&gt; with this features (*):
&lt;ul&gt;
&lt;li&gt;4 Gb of RAM&lt;/li&gt;
&lt;li&gt;4 CPUs&lt;/li&gt;
&lt;li&gt;40 Gb of disk&lt;/li&gt;
&lt;li&gt;Kubernetes installation v1.15.4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;setup helm dependencies needed by the science-toolkit chart&lt;/li&gt;
&lt;li&gt;deploy a helm release on &lt;code&gt;toolkit&lt;/code&gt; namespace&lt;/li&gt;
&lt;li&gt;show information on how to access it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(*) You can change these features to your needs by editing &lt;code&gt;scripts/minikube_start.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The output should look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  üôÑ  [toolkit] minikube v1.7.2 on Ubuntu 19.04
      ‚ñ™ MINIKUBE_PROFILE=toolkit
  ‚ú®  Using the virtualbox driver based on existing profile
  üëç  Kubernetes 1.17.2 is now available. If you would like to upgrade, specify: --kubernetes-version=1.17.2
  ‚åõ  Reconfiguring existing host ...
  üîÑ  Starting existing virtualbox VM for &amp;quot;toolkit&amp;quot; ...
  üê≥  Preparing Kubernetes v1.15.4 on Docker 19.03.5 ...
      ‚ñ™ apiserver.authorization-mode=RBAC
  üöÄ  Launching Kubernetes ...
  üåü  Enabling addons: dashboard, default-storageclass, ingress, metrics-server, registry, storage-provisioner
  üèÑ  Done! kubectl is now configured to use &amp;quot;toolkit&amp;quot;
  ‚ö†Ô∏è  /snap/bin/kubectl is version 1.17.3, and is incompatible with Kubernetes 1.15.4. You will need to update /snap/bin/kubectl or use &#39;minikube kubectl&#39; to connect with this cluster
  üåü  The &#39;ingress&#39; addon is enabled
  üåü  The &#39;dashboard&#39; addon is enabled
  üåü  The &#39;registry&#39; addon is enabled
  üåü  The &#39;storage-provisioner&#39; addon is enabled
  üåü  The &#39;metrics-server&#39; addon is enabled
  Replacing env to &#39;./user-tools-operator/helm-charts/usertools/templates/statefulset.yaml.tpl&#39; into &#39;./user-tools-operator/helm-charts/usertools/templates/statefulset.yaml&#39;
  Replacing env to &#39;./helm/science-toolkit-lite/values.yaml.tpl&#39; into &#39;./helm/science-toolkit-lite/values.yaml&#39;
  Replacing env to &#39;./helm/science-toolkit/values.yaml.tpl&#39; into &#39;./helm/science-toolkit/values.yaml&#39;
  Replacing env to &#39;./tmp/science-toolkit/values.yaml.tpl&#39; into &#39;./tmp/science-toolkit/values.yaml&#39;
  &amp;quot;stable&amp;quot; has been added to your repositories
  üìöÔ∏è Create Namespace if not exist...

  namespace/toolkit configured
  üì¶ Applying helm chart...

  Hang tight while we grab the latest from your chart repositories...
  ...Successfully got an update from the &amp;quot;science-toolkit&amp;quot; chart repository
  ...Successfully got an update from the &amp;quot;rimusz&amp;quot; chart repository
  ...Successfully got an update from the &amp;quot;stable&amp;quot; chart repository
  ...Successfully got an update from the &amp;quot;charts.gitpod.io&amp;quot; chart repository
  Update Complete. ‚éàHappy Helming!‚éà
  Saving 2 charts
  Downloading jupyterhub from repo https://jupyterhub.github.io/helm-chart/
  Downloading minio from repo https://charts.helm.sh/stable
  Deleting outdated charts
  Release &amp;quot;toolkit&amp;quot; does not exist. Installing it now.
  NAME: toolkit
  LAST DEPLOYED: Thu Mar 19 09:17:02 2020
  NAMESPACE: toolkit
  STATUS: deployed
  REVISION: 1
  TEST SUITE: None
  NOTES:
  ----

  üå† Konstellation Science Toolkit Installed
  ##############################

  Your release is named toolkit.

  Now open your browser at: üåé http://app.toolkit.__YOUR_MINIKUBE_IP__.nip.io

  Thank you for installing SCIENCE-TOOLKIT.

  ----

  ‚úîÔ∏è  Done.

&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;checking-installation&#34;&gt;Checking installation&lt;/h1&gt;
&lt;p&gt;Once you installed the science toolkit chart you can access it locally in your browser.&lt;/p&gt;
&lt;p&gt;Open the url   &lt;a href=&#34;http://app.toolkit&#34;&gt;http://app.toolkit&lt;/a&gt;.$YOUR_MINIKUBE_IP.nip.io&lt;/p&gt;
&lt;p&gt;When you open it, it would  redirect you to Gitea to authenticate. The default credentials are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;user: &lt;code&gt;toolkit-admin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;password: &lt;code&gt;123456&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: Change $YOUR_MINIKUBE_IP for the actual IP of the toolkit profile of minikube. If you need to get the IP run &lt;code&gt;minikube ip -p toolkit&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Installation on EKS</title>
      <link>https://konstellation-io.github.io/science-toolkit/docs/installation/eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://konstellation-io.github.io/science-toolkit/docs/installation/eks/</guid>
      <description>
        
        
        &lt;h1 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h1&gt;
&lt;h2 id=&#34;aws-infrastructure-size&#34;&gt;AWS Infrastructure Size&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Science Toolkit needs around 14 IPs for all the pods/services. You need large enough machines to allocate all those IPs, you have the information &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Recommendations: At least &lt;code&gt;2 x t3.large&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage-provisioner&#34;&gt;Storage Provisioner&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s necessary to have a shared storage. The Toolkit is tested with &lt;a href=&#34;https://aws.amazon.com/es/efs/&#34;&gt;EFS storage&lt;/a&gt;  that it needs to be added to your EKS cluster.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm upgrade --install --set efsProvisioner.efsFileSystemId&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$AWS_EFS_ID&lt;/span&gt;
      --set efsProvisioner.awsRegion&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$AWS_DEFAULT_REGION&lt;/span&gt; --set efsProvisioner.storageClass.name&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;standard
      efs-provisioner  stable/efs-provisioner
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want a different sharing approach you can create it on your cluster and then setup the storage class name on the helm &lt;code&gt;values.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;If don&amp;rsquo;t have the EFS provisioner already installed, you can follow &lt;a href=&#34;https://github.com/kubernetes-incubator/external-storage/tree/master/aws/efs&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;dns-configuration&#34;&gt;DNS configuration&lt;/h2&gt;
&lt;p&gt;To access the Science Toolkit you will need one CNAME record with a wildcard connecting to your EKS load balancer.&lt;/p&gt;
&lt;p&gt;In order to get the load balancer hostname run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; kubectl get services nginx-ingress-controller -n kube-system -o wide
NAME                       TYPE           CLUSTER-IP       EXTERNAL-IP                                                              PORT&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;S&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;                      AGE     SELECTOR
nginx-ingress-controller   LoadBalancer   10.100.147.xxx   a92e831a9825e4751ae71e1aa919965e-xxxxxxxx.us-east-1.elb.amazonaws.com   80:31560/TCP,443:31065/TCP   3d19h   app.kubernetes.io/component&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;controller,app&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;nginx-ingress,release&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;nginx-ingress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the CNAME wildcard entry like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;*.toolkit.&amp;lt;Your domain&amp;gt;         CNAME       a92e831a9825e4751ae71e1aa919965e-xxxxxxxx.us-east-1.elb.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tools-requirements&#34;&gt;Tools Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;helm&lt;/code&gt; installed on your system&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html&#34;&gt;Install AWS IAM Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html&#34;&gt;Set your AWS Credentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Copy your kubeconfig to ./kube dir
&lt;pre&gt;&lt;code&gt; mkdir -p $HOME/.kube
 cp ./kubeconfig $HOME/.kube
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Now you can access to the cluster, if the command &lt;code&gt;kubectl get nodes&lt;/code&gt; return a node list, all is ok.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;installation-steps&#34;&gt;Installation steps&lt;/h1&gt;
&lt;h3 id=&#34;add-helm-repo&#34;&gt;Add helm repo&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm repo add science-toolkit https://konstellation-io.github.io/science-toolkit/helm-chart/ 
helm repo update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;setup-storage-class&#34;&gt;Setup storage class&lt;/h3&gt;
&lt;p&gt;You can show the actual values with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm show values science-toolkit/science-toolkit 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you have a storage class different from &lt;code&gt;standard&lt;/code&gt;, you will need to create a &lt;code&gt;values.yaml&lt;/code&gt; and set the value &lt;code&gt;storageClassName&lt;/code&gt; on all components.&lt;/p&gt;
&lt;h3 id=&#34;install&#34;&gt;Install&lt;/h3&gt;
&lt;p&gt;If you are using all the default values run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Create the namespace&lt;/span&gt;
kubectl create ns science-toolkit --dry-run -o yaml &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; kubectl apply -f -

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Install the chart&lt;/span&gt;
helm upgrade &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --wait &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --install science-toolkit &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --namespace science-toolkit &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --timeout 20m &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  science-toolkit/science-toolkit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you have custom values add &lt;code&gt;--values my_values.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;checking-installation&#34;&gt;Checking installation&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;kubectl get pods -n science-toolkit&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;NAME                                     READY   STATUS    RESTARTS   AGE
dashboard-7f9f988644-r9drx               2/2     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
drone-0                                  1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
drone-runner-5ddc7b4bb8-7m6qc            1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
gitea-0                                  1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;          3d18h
hub-7bd8b55c5-vshkc                      1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
mlflow-server-74b4b85bbb-bgqlg           2/2     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
postgres-0                               1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
proxy-f95bff87b-nnkpd                    1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
science-toolkit-minio-59b987965c-zc8dr   1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
user-scheduler-795cbb6486-9c94w          1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
user-scheduler-795cbb6486-pvqkv          1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
user-tools-operator-54d5c79c65-qhvws     1/1     Running   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;          3d18h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Installation on restricted environment</title>
      <link>https://konstellation-io.github.io/science-toolkit/docs/installation/restricted-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://konstellation-io.github.io/science-toolkit/docs/installation/restricted-environment/</guid>
      <description>
        
        
        &lt;h1 id=&#34;context&#34;&gt;Context&lt;/h1&gt;
&lt;p&gt;Sometimes there are project where the data are very sensitive and the access to those is only posible from a very
restricted environment, withut Internet access and with traced remote access to the Science Toolkit via VDI, VPN, etc..&lt;/p&gt;
&lt;p&gt;To achieve the installation of Science Toolkit on these kind of environment is necesary to upload the Docker images through the required security protocols of the organization where th Science Toolkit is going to be deployed, that means that we need to pass all the Docker images as files instead of URL of a Docker registry to be downloaded by the Helm installation process.&lt;/p&gt;
&lt;h2 id=&#34;how-to-export-the-science-toolkit-docker-images&#34;&gt;How to export the Science Toolkit Docker images&lt;/h2&gt;
&lt;p&gt;The first step is to deploy the local environment running in a local machine the script from the repository root &lt;code&gt;./local_env.sh&lt;/code&gt;. This scrip will deploy in a Minikube environment the Science Toolkit.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./local_env.sh
Disable custom kubeconfig environment
üòÑ  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;toolkit&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; minikube v1.12.1 on Ubuntu 20.04
    ‚ñ™ &lt;span style=&#34;color:#000&#34;&gt;MINIKUBE_PROFILE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;toolkit
‚ú®  Using the docker driver based on user configuration
üëç  Starting control plane node toolkit in cluster toolkit
üéâ  minikube 1.12.2 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.12.2
üí°  To disable this notice, run: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;minikube config set WantUpdateNotification false&amp;#39;&lt;/span&gt;

üî•  Creating docker container &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CPUs&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;4, &lt;span style=&#34;color:#000&#34;&gt;Memory&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;8192MB&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; ...
üê≥  Preparing Kubernetes v1.15.4 on Docker 19.03.2 ...
    ‚ñ™ apiserver.authorization-mode&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;RBAC
    &amp;gt; kubectl.sha1: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; B / &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; B &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;----------------------------&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 100.00% ? p/s 0s
    &amp;gt; kubeadm.sha1: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; B / &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; B &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;----------------------------&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 100.00% ? p/s 0s
    &amp;gt; kubelet.sha1: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; B / &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; B &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;----------------------------&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 100.00% ? p/s 0s
    &amp;gt; kubeadm: 38.32 MiB / 38.32 MiB &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;---------------&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 100.00% 22.69 MiB p/s 2s
    &amp;gt; kubectl: 40.99 MiB / 40.99 MiB &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;---------------&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 100.00% 20.24 MiB p/s 2s
    &amp;gt; kubelet: 114.15 MiB / 114.15 MiB &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;-------------&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 100.00% 32.58 MiB p/s 4s
üîé  Verifying Kubernetes components...
üåü  Enabled addons: default-storageclass, storage-provisioner
üèÑ  Done! kubectl is now configured to use &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;toolkit&amp;#34;&lt;/span&gt;

‚ùó  /usr/local/bin/kubectl is version 1.18.0, which may be incompatible with Kubernetes 1.15.4.
üí°  You can also use &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;minikube kubectl -- get pods&amp;#39;&lt;/span&gt; to invoke a matching version
üîé  Verifying ingress addon...
üåü  The &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ingress&amp;#39;&lt;/span&gt; addon is enabled
üåü  The &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;dashboard&amp;#39;&lt;/span&gt; addon is enabled
üîé  Verifying registry addon...
üåü  The &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;registry&amp;#39;&lt;/span&gt; addon is enabled
üåü  The &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;storage-provisioner&amp;#39;&lt;/span&gt; addon is enabled
üåü  The &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;metrics-server&amp;#39;&lt;/span&gt; addon is enabled
Replacing env to &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./user-tools-operator/helm-charts/usertools/templates/statefulset.yaml.tpl&amp;#39;&lt;/span&gt; into &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./user-tools-operator/helm-charts/usertools/templates/statefulset.yaml&amp;#39;&lt;/span&gt;
Replacing env to &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./helm/science-toolkit/values.yaml.tpl&amp;#39;&lt;/span&gt; into &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;./helm/science-toolkit/values.yaml&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;stable&amp;#34;&lt;/span&gt; has been added to your repositories
üìöÔ∏è Create Namespace &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; not exist...

W0810 11:24:32.286701  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;726844&lt;/span&gt; helpers.go:535&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; --dry-run is deprecated and can be replaced with --dry-run&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;client.
namespace/toolkit created
üì¶ Applying helm chart...

Hang tight &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; we grab the latest from your chart repositories...
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jfelten&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;rimusz&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;science-toolkit&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;influxdata&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;konstellation-ce&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jetstack&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;konstellation-io&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;gitlab&amp;#34;&lt;/span&gt; chart repository
...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;stable&amp;#34;&lt;/span&gt; chart repository
Update Complete. ‚éàHappy Helming!‚éà
Saving &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; charts
Downloading minio from repo https://charts.helm.sh/stable
Deleting outdated charts
Release &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;toolkit&amp;#34;&lt;/span&gt; does not exist. Installing it now.
NAME: toolkit
LAST DEPLOYED: Mon Aug &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; 11:24:37 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt;
NAMESPACE: toolkit
STATUS: deployed
REVISION: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
TEST SUITE: None
NOTES:
----

üå† Konstellation Science Toolkit Installed
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;##############################&lt;/span&gt;

Your release is named toolkit.

Now open your browser at: üåé http://app.toolkit.172.17.0.3.nip.io

Thank you &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; installing SCIENCE-TOOLKIT.

----

‚úîÔ∏è  Done.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once that the Science Toolkit is deployed in our local machine on top of Minikue we have to login and start de &lt;code&gt;Users Toolks&lt;/code&gt; in order to download all the Docker images required to perform trainings and write experiments. When the Users Tooll are up and running run the script &lt;code&gt;./scripts/export_images.sh&lt;/code&gt;. This script will create a folder called &lt;code&gt;toolkit_images&lt;/code&gt; where will export all the docker images as &lt;code&gt;.tgz&lt;/code&gt; files and will create a &lt;code&gt;.tar.gz&lt;/code&gt; with all the images.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; scripts/
./export_images.sh
‚è≥ Check &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt; Minikube environment is running Science Toolkit...
‚úî Done
‚è≥ Getting images to be exported...
‚úî Done
‚è≥ Creating &lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; folder and cleaning &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; present...
‚úî Done
‚è≥ Exporting Science Toolkit Docker images...
0: Exporting Docker image drone/drone:1.7.0 ...
1: Exporting Docker image drone/kubernetes-secrets:latest ...
2: Exporting Docker image minio/minio:RELEASE.2019-08-07T01-59-21Z ...
3: Exporting Docker image postgres:12.1 ...
4: Exporting Docker image terminus7/drone-runner-kube:latest ...
5: Exporting Docker image terminus7/gitea:oauth ...
6: Exporting Docker image terminus7/gitea-oauth2-setup:latest ...
7: Exporting Docker image terminus7/jupyterlab-gpu:2.2.15 ...
8: Exporting Docker image terminus7/mlflow:latest ...
9: Exporting Docker image terminus7/oauth2-proxy:latest ...
10: Exporting Docker image terminus7/sci-toolkit-dashboard:latest ...
11: Exporting Docker image terminus7/sci-toolkit-user-tools-operator:latest ...
12: Exporting Docker image terminus7/sci-toolkit-vscode:1.4.6 ...
‚úî Done
‚è≥ Creating &lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; tar.gz file...
tar: Removing leading &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;/&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt; from member names
/github/science-toolkit/scripts/toolkit_images/
/github/science-toolkit/scripts/toolkit_images/terminus7-drone-runner-kube:latest.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-gitea:oauth.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-sci-toolkit-user-tools-operator:latest.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-sci-toolkit-dashboard:latest.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-gitea-oauth2-setup:latest.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-sci-toolkit-vscode:1.4.6.gz
/github/science-toolkit/scripts/toolkit_images/drone-drone:1.7.0.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-oauth2-proxy:latest.gz
/github/science-toolkit/scripts/toolkit_images/drone-kubernetes-secrets:latest.gz
/github/science-toolkit/scripts/toolkit_images/minio-minio:RELEASE.2019-08-07T01-59-21Z.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-mlflow:latest.gz
/github/science-toolkit/scripts/toolkit_images/terminus7-jupyterlab-gpu:2.2.15.gz
/github/science-toolkit/scripts/toolkit_images/postgres:12.1.gz
‚úî Done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-to-import-the-docker-images-in-each-kubernetes-host&#34;&gt;How to import the Docker images in each Kubernetes host&lt;/h2&gt;
&lt;p&gt;In order to import all the previously exported Docker images just follow the below steps.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;tar zxvf toolkit_images.tar.gz
&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; toolkit_images/
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# the next command is just for one images, repeat it for each image&lt;/span&gt;
docker import terminus7-gitea-oauth2-setup:latest.gz terminus7/gitea-oauth2-setup:latest
&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;...&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
