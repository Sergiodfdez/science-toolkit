[{"body":"Background and Goal Today, data-based projects have a critical impact on any business. The amount of historical information available, the different data sources that enrich this information, and the ability to compute and execute advanced techniques, are some of the indicators that demonstrate why this branch of technology has become one of the main actors in the stage. For approximately four years, the evolution in terms of technological framework and algorithms has been overwhelming. A lot of new technological approaches and improvements in the state-of-the-art solutions and methods applied have helped to push this field to be more controlled, established and mature. Much of the responsibility is held by software engineering, where methodologies and patterns have been adopted when designing artificial intelligence solutions.\nHowever, in order to achieve total technological maturity, there are still many gaps in the methodologies inherited from software engineering that need to be filled in. Although total technological maturity is very ambitious, there are improvements and changes that can be adopted in the medium term. With that goal in mind, the Science Toolkit has been developed following this idea of ‚Äãmoving to the next level of maturity.\nThe Science Toolkit goal can be defined in one sentence as:\n‚ÄúTo offer a standard environment that covers the technological and methodological needs of a data team in an artificial intelligence project.‚Äù\nWhat is the Science Toolkit? As mentioned in the previous section, the Science Toolkit is a solution that offers a standard environment to cover the technological and methodological needs of a data team working in any artificial intelligence project, allowing the data scientists to focus on gaining value and new insights from the data.\nRegarding the technological needs, the science Toolkit is composed of a suite with the latest frameworks and libraries in the same environment, as well as, its own engineering approaches such as data versioning, model versioning, continuous integration, dashboards for data visualization, etc. In terms of the methodology, the Science Toolkit is designed to develop experiments guided by hypotheses, so that the control is greater and the collaboration between team members is easier and more effective.\nScience Toolkit Workflow Applying the proper methodology in artificial intelligence projects is a challenging task. There is a lot of literature covering the main phases and levels of a data project. Nowadays the definition of the right workflow to face real data projects is pretty similar in the main organizations working in this area. The Science Toolkit is designed to provide the right tools and the right workflow to help A.I. researchers and practitioners to work applying these methodology standards. For any data project, the first step would be to design a set of initial hypotheses that will guide the work. Following the hypotheses definition, an exploratory data analysis is performed in some cases together with the development of some preliminary models, to gain data knowledge and starting to get some insights regarding the hypotheses.\nWith this objective in mind, the Science Toolkit offers a data-studio based on open source technologies to perform these tasks easily. It is important to take into account that along the entire project, a volume to persist temporary data or artifacts is necessary for good project development.\nOnce the hypotheses are proven and the data analysis returns a promising output, it is advisable to adopt software engineer methodologies or patterns to develop the solution in the correct way. Some good practices such as ATDD, code decoupling or unit tests are examples that can be useful to control that the project evolves in the right path. At this point, a code editor is mandatory to facilitate development. Of course, all of the generated code is maintained through some code version technology (i.e: git).\nAnother useful adoption is continuous integration and execution. Having the experiments totally automated is a win for the project because it allows testing of different configurations for the executions in favor of having the best possible solution. Some of the benefits of applying this approach are automated execution, saved metrics, charts generation or artifacts serialization.\nAs it is important to not lose sight of the useful information that we need to store related to the experiments, a solution for managing this information as useful metrics is needed as well as a database to store it.\nLast but not least, a dashboard is mandatory to support the analysis during the exploratory data analysis phase and for checking the results of the experiments executed.\nThe Science Toolkit covers with open source technologies all the needs for the different phases highlighted in the previous paragraphs. The aim of this is to provide a suite of tools and technological frameworks to work in data projects, as well as, the right workflow and methodology to help artificial intelligence researchers and practitioners to obtain the maximum value from each phase of the project.\n","excerpt":"Background and Goal Today, data-based projects have a critical impact on any business. The amount of ‚Ä¶","ref":"/science-toolkit/docs/overview/","title":"Overview"},{"body":"","excerpt":"","ref":"/science-toolkit/docs/","title":"Documentation"},{"body":"Pre-requisites In order to install Science Toolkit needs the following tools:\n Helm version 3. + info (works also with v2) A Kubernetes cluster (tested only with 1.15.4) + info  You can also use a local cluster like minikube.    Add helm dependencies repos $ helm repo add stable https://charts.helm.sh/stable $ helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/ $ helm repo add science-toolkit https://konstellation-io.github.io/science-toolkit/helm-chart/ $ helm repo update Setting up chart values Make a copy of sample-values.yaml and change what you need to deploy Science Toolkit on top of a Minikube local environment.\nBasically you need to set some credentials for different components. Only change your storage class name if your cluster have something different from standard.\nInstallation $ helm upgrade \\  --wait \\  --install science-toolkit \\  --namespace science-toolkit \\  --values values.yaml \\  --timeout 5m \\  science-toolkit/science-toolkit Domain Setup If you are deploying Science Toolkit in a remote cluster you need setup a DNS subdomain pointint to the ip address where your ingress controller is listening, and set this domain in the values.yaml file before deploy it.\n","excerpt":"Pre-requisites In order to install Science Toolkit needs the following tools:\n Helm version 3. + ‚Ä¶","ref":"/science-toolkit/docs/getting-started/","title":"Getting Started"},{"body":"Architecture Gitea Gitea is an open-source forge software package for hosting software development version control using Git as well as other collaborative features like bug tracking, wikis, and code review.\nFor more information please visit: gitea.io\nJupyterHub Gitea is an open-source forge software package for hosting software development version control using Git as well as other collaborative features like bug tracking, wikis, and code review.\nFor more information please visit: Jupyter Hub\nVS Code Visual Studio Code is a lightweight but powerful online code editor that support Python, Go, JavaScript, TypeScript, Node.js, etc) For more information please visit: VS Code\nDrone.io Drone.io is an open-source continuous integration platform built on Docker which allows automating Software Testing and Delivery.\nFor more information please visit: Drone.io\nMLFlow MLflow is an open-source platform to manage the ML lifecycle, including experimentation, reproducibility, and deployment. MLFlow allows tracking the results of jobs that have been scheduled in a pipeline. It is integrated with Minio for persistence.\nFor more information please visit: MLFlow\nPostgres Postgres is an open-source relational database management system emphasizing extensibility and technical standards compliance. It is designed to handle a range of workloads, from single machines to data warehouses or Web services with many concurrent users.\nFor more information please visit: PostgreSQL\n","excerpt":"Architecture Gitea Gitea is an open-source forge software package for hosting software development ‚Ä¶","ref":"/science-toolkit/docs/components/","title":"Components"},{"body":" Here is the detailed installation instructions for different flavors of Kubernetes, like GKE, EKS or AKS.\n ","excerpt":" Here is the detailed installation instructions for different flavors of Kubernetes, like GKE, EKS ‚Ä¶","ref":"/science-toolkit/docs/installation/","title":"Installation"},{"body":"Pre-requisites   A Minikube installation. If you need help installing it follow this guide\n  A Helm installation. You can install it following this guide\n  A bash console able execute .sh scripts\n  gettext package installed\n  A clone of this repo\n  Checking requisites If you have all the pre-requisites you should be able to execute all these commands without errors:\n$\u0026gt; minikube version $\u0026gt; helm version $\u0026gt; kubectl version Installation steps Clone the repo $\u0026gt; git clone git@github.com:intelygenz/science-toolkit.git Create the local environment To start the installation you can use the script \u0026lt;repo_root\u0026gt;/local_env.sh. This script will take care of the following steps:\n start a Minikube profile named toolkit with this features (*):  4 Gb of RAM 4 CPUs 40 Gb of disk Kubernetes installation v1.15.4   setup helm dependencies needed by the science-toolkit chart deploy a helm release on toolkit namespace show information on how to access it  (*) You can change these features to your needs by editing scripts/minikube_start.sh\nThe output should look like:\n üôÑ [toolkit] minikube v1.7.2 on Ubuntu 19.04 ‚ñ™ MINIKUBE_PROFILE=toolkit ‚ú® Using the virtualbox driver based on existing profile üëç Kubernetes 1.17.2 is now available. If you would like to upgrade, specify: --kubernetes-version=1.17.2 ‚åõ Reconfiguring existing host ... üîÑ Starting existing virtualbox VM for \u0026quot;toolkit\u0026quot; ... üê≥ Preparing Kubernetes v1.15.4 on Docker 19.03.5 ... ‚ñ™ apiserver.authorization-mode=RBAC üöÄ Launching Kubernetes ... üåü Enabling addons: dashboard, default-storageclass, ingress, metrics-server, registry, storage-provisioner üèÑ Done! kubectl is now configured to use \u0026quot;toolkit\u0026quot; ‚ö†Ô∏è /snap/bin/kubectl is version 1.17.3, and is incompatible with Kubernetes 1.15.4. You will need to update /snap/bin/kubectl or use 'minikube kubectl' to connect with this cluster üåü The 'ingress' addon is enabled üåü The 'dashboard' addon is enabled üåü The 'registry' addon is enabled üåü The 'storage-provisioner' addon is enabled üåü The 'metrics-server' addon is enabled Replacing env to './user-tools-operator/helm-charts/usertools/templates/statefulset.yaml.tpl' into './user-tools-operator/helm-charts/usertools/templates/statefulset.yaml' Replacing env to './helm/science-toolkit-lite/values.yaml.tpl' into './helm/science-toolkit-lite/values.yaml' Replacing env to './helm/science-toolkit/values.yaml.tpl' into './helm/science-toolkit/values.yaml' Replacing env to './tmp/science-toolkit/values.yaml.tpl' into './tmp/science-toolkit/values.yaml' \u0026quot;stable\u0026quot; has been added to your repositories üìöÔ∏è Create Namespace if not exist... namespace/toolkit configured üì¶ Applying helm chart... Hang tight while we grab the latest from your chart repositories... ...Successfully got an update from the \u0026quot;science-toolkit\u0026quot; chart repository ...Successfully got an update from the \u0026quot;rimusz\u0026quot; chart repository ...Successfully got an update from the \u0026quot;stable\u0026quot; chart repository ...Successfully got an update from the \u0026quot;charts.gitpod.io\u0026quot; chart repository Update Complete. ‚éàHappy Helming!‚éà Saving 2 charts Downloading jupyterhub from repo https://jupyterhub.github.io/helm-chart/ Downloading minio from repo https://charts.helm.sh/stable Deleting outdated charts Release \u0026quot;toolkit\u0026quot; does not exist. Installing it now. NAME: toolkit LAST DEPLOYED: Thu Mar 19 09:17:02 2020 NAMESPACE: toolkit STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: ---- üå† Konstellation Science Toolkit Installed ############################## Your release is named toolkit. Now open your browser at: üåé http://app.toolkit.__YOUR_MINIKUBE_IP__.nip.io Thank you for installing SCIENCE-TOOLKIT. ---- ‚úîÔ∏è Done. Checking installation Once you installed the science toolkit chart you can access it locally in your browser.\nOpen the url http://app.toolkit.$YOUR_MINIKUBE_IP.nip.io\nWhen you open it, it would redirect you to Gitea to authenticate. The default credentials are:\n user: toolkit-admin password: 123456  Note: Change $YOUR_MINIKUBE_IP for the actual IP of the toolkit profile of minikube. If you need to get the IP run minikube ip -p toolkit\n","excerpt":"Pre-requisites   A Minikube installation. If you need help installing it follow this guide\n  A Helm ‚Ä¶","ref":"/science-toolkit/docs/installation/minikube/","title":"Installation on Minikube"},{"body":" Here is the guidelines to contribute to this open source project.\n ","excerpt":" Here is the guidelines to contribute to this open source project.\n ","ref":"/science-toolkit/docs/contribution-guidelines/","title":"Contribution Guidelines"},{"body":"Pre-requisites The same requisites you need to install it locally.\n$path/to/repo\u0026gt; apt install libnss3-tools Installation variant In order to start adding features to the Science Toolkit you first need a local installation. You can follow the Minikube installation guide and only need to change this line:\nChange this:\n$/path/to/repo\u0026gt; ./local_env.sh To this:\n$/path/to/repo\u0026gt; ./local_env.sh --docker-build If you have previously installed it Only if you have previously installed it without the build option, you need to clean the namespace and start over.\n$path/to/repo\u0026gt; ./local_env.sh --dracarys Note: the --dracarys option would reset the Minikube profile and start fresh.\nOperator SDK If you want to make changes to the user-tools-operator you\u0026rsquo;d need the Operator SDK installed. You can follow this operator-sdk installation guide\nThat\u0026rsquo;s all you need. The script local_env.sh will detect you have the command and it will run a build for the operator too.local_env\nBuilding docker images You can build a single image instead of running local_env.sh each time. You need to add some docker environment variables to work with Minikube instead of your host docker.previously\n$\u0026gt; eval \u0026quot;$(minikube docker-env -p \u0026quot;toolkit\u0026quot;)\u0026quot; Now you can run docker build on that terminal and the image would be built inside Minikube. If you have any running pods of the image you re-build, just delete it and Minikube would take care of restarting the container with the new image.previously\n","excerpt":"Pre-requisites The same requisites you need to install it locally.\n$path/to/repo\u0026gt; apt install ‚Ä¶","ref":"/science-toolkit/docs/development/","title":"Development"},{"body":"Pre-requisites AWS Infrastructure Size  The Science Toolkit needs around 14 IPs for all the pods/services. You need large enough machines to allocate all those IPs, you have the information here. Recommendations: At least 2 x t3.large  Storage Provisioner It\u0026rsquo;s necessary to have a shared storage. The Toolkit is tested with EFS storage that it needs to be added to your EKS cluster.\nhelm upgrade --install --set efsProvisioner.efsFileSystemId=$AWS_EFS_ID --set efsProvisioner.awsRegion=$AWS_DEFAULT_REGION --set efsProvisioner.storageClass.name=standard efs-provisioner stable/efs-provisioner If you want a different sharing approach you can create it on your cluster and then setup the storage class name on the helm values.yml file.\nIf don\u0026rsquo;t have the EFS provisioner already installed, you can follow this guide.\nDNS configuration To access the Science Toolkit you will need one CNAME record with a wildcard connecting to your EKS load balancer.\nIn order to get the load balancer hostname run this command:\nkubectl get services nginx-ingress-controller -n kube-system -o wide NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE SELECTOR nginx-ingress-controller LoadBalancer 10.100.147.xxx a92e831a9825e4751ae71e1aa919965e-xxxxxxxx.us-east-1.elb.amazonaws.com 80:31560/TCP,443:31065/TCP 3d19h app.kubernetes.io/component=controller,app=nginx-ingress,release=nginx-ingress Add the CNAME wildcard entry like this.\n*.toolkit.\u0026lt;Your domain\u0026gt; CNAME a92e831a9825e4751ae71e1aa919965e-xxxxxxxx.us-east-1.elb.amazonaws.com Tools Requirements  kubectl and helm installed on your system Install AWS IAM Authenticator Set your AWS Credentials Copy your kubeconfig to ./kube dir  mkdir -p $HOME/.kube cp ./kubeconfig $HOME/.kube  Now you can access to the cluster, if the command kubectl get nodes return a node list, all is ok.  Installation steps Add helm repo helm repo add science-toolkit https://konstellation-io.github.io/science-toolkit/helm-chart/ helm repo update Setup storage class You can show the actual values with this command:\nhelm show values science-toolkit/science-toolkit If you have a storage class different from standard, you will need to create a values.yaml and set the value storageClassName on all components.\nInstall If you are using all the default values run:\n# Create the namespace kubectl create ns science-toolkit --dry-run -o yaml | kubectl apply -f - # Install the chart helm upgrade \\  --wait \\  --install science-toolkit \\  --namespace science-toolkit \\  --timeout 20m \\  science-toolkit/science-toolkit If you have custom values add --values my_values.yaml.\nChecking installation kubectl get pods -n science-toolkit\nNAME READY STATUS RESTARTS AGE dashboard-7f9f988644-r9drx 2/2 Running 0 3d18h drone-0 1/1 Running 0 3d18h drone-runner-5ddc7b4bb8-7m6qc 1/1 Running 0 3d18h gitea-0 1/1 Running 1 3d18h hub-7bd8b55c5-vshkc 1/1 Running 0 3d18h mlflow-server-74b4b85bbb-bgqlg 2/2 Running 0 3d18h postgres-0 1/1 Running 0 3d18h proxy-f95bff87b-nnkpd 1/1 Running 0 3d18h science-toolkit-minio-59b987965c-zc8dr 1/1 Running 0 3d18h user-scheduler-795cbb6486-9c94w 1/1 Running 0 3d18h user-scheduler-795cbb6486-pvqkv 1/1 Running 0 3d18h user-tools-operator-54d5c79c65-qhvws 1/1 Running 0 3d18h ","excerpt":"Pre-requisites AWS Infrastructure Size  The Science Toolkit needs around 14 IPs for all the ‚Ä¶","ref":"/science-toolkit/docs/installation/eks/","title":"Installation on EKS"},{"body":"Context Sometimes there are project where the data are very sensitive and the access to those is only posible from a very restricted environment, withut Internet access and with traced remote access to the Science Toolkit via VDI, VPN, etc..\nTo achieve the installation of Science Toolkit on these kind of environment is necesary to upload the Docker images through the required security protocols of the organization where th Science Toolkit is going to be deployed, that means that we need to pass all the Docker images as files instead of URL of a Docker registry to be downloaded by the Helm installation process.\nHow to export the Science Toolkit Docker images The first step is to deploy the local environment running in a local machine the script from the repository root ./local_env.sh. This scrip will deploy in a Minikube environment the Science Toolkit.\n./local_env.sh Disable custom kubeconfig environment üòÑ [toolkit] minikube v1.12.1 on Ubuntu 20.04 ‚ñ™ MINIKUBE_PROFILE=toolkit ‚ú® Using the docker driver based on user configuration üëç Starting control plane node toolkit in cluster toolkit üéâ minikube 1.12.2 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.12.2 üí° To disable this notice, run: \u0026#39;minikube config set WantUpdateNotification false\u0026#39; üî• Creating docker container (CPUs=4, Memory=8192MB) ... üê≥ Preparing Kubernetes v1.15.4 on Docker 19.03.2 ... ‚ñ™ apiserver.authorization-mode=RBAC \u0026gt; kubectl.sha1: 41 B / 41 B [----------------------------] 100.00% ? p/s 0s \u0026gt; kubeadm.sha1: 41 B / 41 B [----------------------------] 100.00% ? p/s 0s \u0026gt; kubelet.sha1: 41 B / 41 B [----------------------------] 100.00% ? p/s 0s \u0026gt; kubeadm: 38.32 MiB / 38.32 MiB [---------------] 100.00% 22.69 MiB p/s 2s \u0026gt; kubectl: 40.99 MiB / 40.99 MiB [---------------] 100.00% 20.24 MiB p/s 2s \u0026gt; kubelet: 114.15 MiB / 114.15 MiB [-------------] 100.00% 32.58 MiB p/s 4s üîé Verifying Kubernetes components... üåü Enabled addons: default-storageclass, storage-provisioner üèÑ Done! kubectl is now configured to use \u0026#34;toolkit\u0026#34; ‚ùó /usr/local/bin/kubectl is version 1.18.0, which may be incompatible with Kubernetes 1.15.4. üí° You can also use \u0026#39;minikube kubectl -- get pods\u0026#39; to invoke a matching version üîé Verifying ingress addon... üåü The \u0026#39;ingress\u0026#39; addon is enabled üåü The \u0026#39;dashboard\u0026#39; addon is enabled üîé Verifying registry addon... üåü The \u0026#39;registry\u0026#39; addon is enabled üåü The \u0026#39;storage-provisioner\u0026#39; addon is enabled üåü The \u0026#39;metrics-server\u0026#39; addon is enabled Replacing env to \u0026#39;./user-tools-operator/helm-charts/usertools/templates/statefulset.yaml.tpl\u0026#39; into \u0026#39;./user-tools-operator/helm-charts/usertools/templates/statefulset.yaml\u0026#39; Replacing env to \u0026#39;./helm/science-toolkit/values.yaml.tpl\u0026#39; into \u0026#39;./helm/science-toolkit/values.yaml\u0026#39; \u0026#34;stable\u0026#34; has been added to your repositories üìöÔ∏è Create Namespace if not exist... W0810 11:24:32.286701 726844 helpers.go:535] --dry-run is deprecated and can be replaced with --dry-run=client. namespace/toolkit created üì¶ Applying helm chart... Hang tight while we grab the latest from your chart repositories... ...Successfully got an update from the \u0026#34;jfelten\u0026#34; chart repository ...Successfully got an update from the \u0026#34;rimusz\u0026#34; chart repository ...Successfully got an update from the \u0026#34;science-toolkit\u0026#34; chart repository ...Successfully got an update from the \u0026#34;influxdata\u0026#34; chart repository ...Successfully got an update from the \u0026#34;aws\u0026#34; chart repository ...Successfully got an update from the \u0026#34;konstellation-ce\u0026#34; chart repository ...Successfully got an update from the \u0026#34;jetstack\u0026#34; chart repository ...Successfully got an update from the \u0026#34;konstellation-io\u0026#34; chart repository ...Successfully got an update from the \u0026#34;gitlab\u0026#34; chart repository ...Successfully got an update from the \u0026#34;stable\u0026#34; chart repository Update Complete. ‚éàHappy Helming!‚éà Saving 1 charts Downloading minio from repo https://charts.helm.sh/stable Deleting outdated charts Release \u0026#34;toolkit\u0026#34; does not exist. Installing it now. NAME: toolkit LAST DEPLOYED: Mon Aug 10 11:24:37 2020 NAMESPACE: toolkit STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: ---- üå† Konstellation Science Toolkit Installed ############################## Your release is named toolkit. Now open your browser at: üåé http://app.toolkit.172.17.0.3.nip.io Thank you for installing SCIENCE-TOOLKIT. ---- ‚úîÔ∏è Done. Once that the Science Toolkit is deployed in our local machine on top of Minikue we have to login and start de Users Toolks in order to download all the Docker images required to perform trainings and write experiments. When the Users Tooll are up and running run the script ./scripts/export_images.sh. This script will create a folder called toolkit_images where will export all the docker images as .tgz files and will create a .tar.gz with all the images.\ncd scripts/ ./export_images.sh ‚è≥ Check if local Minikube environment is running Science Toolkit... ‚úî Done ‚è≥ Getting images to be exported... ‚úî Done ‚è≥ Creating export folder and cleaning if present... ‚úî Done ‚è≥ Exporting Science Toolkit Docker images... 0: Exporting Docker image drone/drone:1.7.0 ... 1: Exporting Docker image drone/kubernetes-secrets:latest ... 2: Exporting Docker image minio/minio:RELEASE.2019-08-07T01-59-21Z ... 3: Exporting Docker image postgres:12.1 ... 4: Exporting Docker image terminus7/drone-runner-kube:latest ... 5: Exporting Docker image terminus7/gitea:oauth ... 6: Exporting Docker image terminus7/gitea-oauth2-setup:latest ... 7: Exporting Docker image terminus7/jupyterlab-gpu:2.2.15 ... 8: Exporting Docker image terminus7/mlflow:latest ... 9: Exporting Docker image terminus7/oauth2-proxy:latest ... 10: Exporting Docker image terminus7/sci-toolkit-dashboard:latest ... 11: Exporting Docker image terminus7/sci-toolkit-user-tools-operator:latest ... 12: Exporting Docker image terminus7/sci-toolkit-vscode:1.4.6 ... ‚úî Done ‚è≥ Creating export tar.gz file... tar: Removing leading `/\u0026#39; from member names /github/science-toolkit/scripts/toolkit_images/ /github/science-toolkit/scripts/toolkit_images/terminus7-drone-runner-kube:latest.gz /github/science-toolkit/scripts/toolkit_images/terminus7-gitea:oauth.gz /github/science-toolkit/scripts/toolkit_images/terminus7-sci-toolkit-user-tools-operator:latest.gz /github/science-toolkit/scripts/toolkit_images/terminus7-sci-toolkit-dashboard:latest.gz /github/science-toolkit/scripts/toolkit_images/terminus7-gitea-oauth2-setup:latest.gz /github/science-toolkit/scripts/toolkit_images/terminus7-sci-toolkit-vscode:1.4.6.gz /github/science-toolkit/scripts/toolkit_images/drone-drone:1.7.0.gz /github/science-toolkit/scripts/toolkit_images/terminus7-oauth2-proxy:latest.gz /github/science-toolkit/scripts/toolkit_images/drone-kubernetes-secrets:latest.gz /github/science-toolkit/scripts/toolkit_images/minio-minio:RELEASE.2019-08-07T01-59-21Z.gz /github/science-toolkit/scripts/toolkit_images/terminus7-mlflow:latest.gz /github/science-toolkit/scripts/toolkit_images/terminus7-jupyterlab-gpu:2.2.15.gz /github/science-toolkit/scripts/toolkit_images/postgres:12.1.gz ‚úî Done How to import the Docker images in each Kubernetes host In order to import all the previously exported Docker images just follow the below steps.\ntar zxvf toolkit_images.tar.gz cd toolkit_images/ # the next command is just for one images, repeat it for each image docker import terminus7-gitea-oauth2-setup:latest.gz terminus7/gitea-oauth2-setup:latest [...] ","excerpt":"Context Sometimes there are project where the data are very sensitive and the access to those is ‚Ä¶","ref":"/science-toolkit/docs/installation/restricted-environment/","title":"Installation on restricted environment"},{"body":"","excerpt":"","ref":"/science-toolkit/index.json","title":""},{"body":"  #td-cover-block-0 { background-image: url(/science-toolkit/about/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/science-toolkit/about/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  About Science Toolkits An Open Source project to help Data Scientists        Science Toolkit is a solution that offers a standard environment to cover the technological and methodological needs of a data team working in any artificial intelligence project.     This is another section     ","excerpt":"  #td-cover-block-0 { background-image: ‚Ä¶","ref":"/science-toolkit/about/","title":"About Science Toolkits"},{"body":"","excerpt":"","ref":"/science-toolkit/community/","title":"Community"},{"body":"  #td-cover-block-0 { background-image: url(/science-toolkit/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/science-toolkit/featured-background_hu8a944d267ae3eda7658be2b204e4ea37_687139_1920x1080_fill_q75_catmullrom_top.jpg); } }  Welcome to Science Toolkit: An Open Source project to help Data Scientists! Learn More   Download   Porridge temperature assessment - in the cloud!\n\n        Science Toolkits is an open source project to help Data Scientist.    ","excerpt":"  #td-cover-block-0 { background-image: ‚Ä¶","ref":"/science-toolkit/","title":"Science Toolkits"},{"body":"","excerpt":"","ref":"/science-toolkit/search/","title":"Search Results"}]